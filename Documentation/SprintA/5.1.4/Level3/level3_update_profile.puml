
@startuml
actor User
participant API_Controller
participant Service_Layer
participant System_User_Repository
participant Patient_Repository
participant Logging_Service
participant Email_Service
participant Unit_of_Work
database Database

User -> API_Controller: PUT /update-profile
API_Controller -> API_Controller: Validate Model
alt Invalid Model
    API_Controller -> User: 400 Bad Request
else Valid Model
    API_Controller -> Service_Layer: UpdateProfileAsUserAsync
    Service_Layer -> System_User_Repository: GetByIdAsync
    System_User_Repository -> Database: Query User by ID
    alt User Not Found
        Service_Layer -> API_Controller: Exception: "User not found"
    else
        Service_Layer -> Patient_Repository: GetPatientByEmailAsync
        Patient_Repository -> Database: Query Patient by Email
        alt Patient Not Found
            Service_Layer -> API_Controller: Exception: "Patient not found"
        else
            Service_Layer -> Logging_Service: Log Original Data
            Service_Layer -> Service_Layer: Update Fields
            Service_Layer -> Logging_Service: Log Changed Fields
            alt Email or Phone Changed
                Service_Layer -> Email_Service: Send Verification Email
            end
            Service_Layer -> Patient_Repository: UpdatePatientAsync
            Patient_Repository -> Database: Update Patient
            Service_Layer -> System_User_Repository: UpdateUserAsync
            System_User_Repository -> Database: Update User
            Service_Layer -> Unit_of_Work: Commit
            Unit_of_Work -> Database: Save Changes
            Service_Layer -> API_Controller: Updated Patient DTO
        end
    end
    API_Controller -> User: 200 OK with updated profile details
end
@enduml
