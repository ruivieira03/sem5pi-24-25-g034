{"ast":null,"code":"var _jsxFileName = \"/Users/martim/Documentos/ISEP/6_semester/pi5/sem5pi-24-25-g034/clientapp/src/modules/Auth/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate(); // Hook for navigation\n\n  const handleResetPassword = async () => {\n    setMessage('');\n    setError('');\n    if (password.trim() === '' || confirmPassword.trim() === '') {\n      setError('Please fill out all fields.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    const queryParams = new URLSearchParams(location.search);\n    const email = queryParams.get('email');\n    const token = queryParams.get('token'); // Extract token from query params\n\n    if (!email || !token) {\n      setError('Missing email or token in the link.');\n      return;\n    }\n    try {\n      const response = await axios.post(`https://localhost:5001/api/account/reset-password?email=${email}&token=${token}`, {\n        password\n      });\n\n      // Display the success message\n      setMessage(response.data.message || 'Password reset successful. You can now log in.');\n\n      // Redirect to the landing page\n      setTimeout(() => {\n        navigate('/');\n      }, 3000); // Wait for 3 seconds before redirecting \n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        className: \"reset-button\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"BT+mPUcZ49ixJHrliFPrHDChooI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","location","navigate","handleResetPassword","trim","queryParams","URLSearchParams","search","email","get","token","response","post","data","setTimeout","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/martim/Documentos/ISEP/6_semester/pi5/sem5pi-24-25-g034/clientapp/src/modules/Auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css'; // Import the CSS file for styling\n\nfunction ResetPassword() {\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n    const location = useLocation();\n    const navigate = useNavigate(); // Hook for navigation\n\n    const handleResetPassword = async () => {\n        setMessage('');\n        setError('');\n\n        if (password.trim() === '' || confirmPassword.trim() === '') {\n            setError('Please fill out all fields.');\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError('Passwords do not match.');\n            return;\n        }\n\n        const queryParams = new URLSearchParams(location.search);\n        const email = queryParams.get('email');\n        const token = queryParams.get('token'); // Extract token from query params\n\n        if (!email || !token) {\n            setError('Missing email or token in the link.');\n            return;\n        }\n\n        try {\n            const response = await axios.post(`https://localhost:5001/api/account/reset-password?email=${email}&token=${token}`, {\n                password\n            });\n\n            // Display the success message\n            setMessage(response.data.message || 'Password reset successful. You can now log in.');\n\n            // Redirect to the landing page\n            setTimeout(() => {\n                navigate('/');\n            }, 3000); // Wait for 3 seconds before redirecting \n        } catch (err) {\n            setError(err.response?.data?.message || 'An error occurred. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"reset-container\">\n            <div className=\"reset-form\">\n                <h2>Reset Your Password</h2>\n                {message && <p className=\"success-message\">{message}</p>}\n                {error && <p className=\"error-message\">{error}</p>}\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter new password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"input-field\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm new password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    className=\"input-field\"\n                />\n                <button onClick={handleResetPassword} className=\"reset-button\">\n                    Reset Password\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}